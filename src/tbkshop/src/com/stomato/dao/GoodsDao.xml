<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stomato.dao.GoodsDao">
	<resultMap type="com.stomato.domain.Goods" id="goods"> 
		<result property="id" column="id" />
		<result property="goodsCode" column="goods_code" />
		<result property="goodsName" column="goods_name"/>
		<result property="shopId" column="shop_id"/>
		<result property="brandId" column="brand_id"/>
		<result property="createrUid" column="creater_uid"/>
		<result property="sellPrice" column="sell_price"/>
		<result property="costPrice" column="cost_price"/>
		<result property="commRate" column="comm_rate"/>
		<result property="commPrice" column="comm_price"/>
		<result property="goodsPic" column="goods_pic"/>
		<result property="brief" column="brief"/>
		<result property="content" column="content"/>
		<result property="likeNum" column="like_num"/>
		<result property="isTop" column="is_top"/>
		<result property="isHot" column="is_hot"/>
		<result property="indexHot" column="index_hot"/>
		<result property="status" column="status"/>
		<result property="preview" column="preview"/>
		<result property="sort" column="sort"/>
		<result property="keyword" column="keyword"/>
		<result property="stocks" column="stocks"/>
		<result property="lIcon" column="l_icon"/>
		<result property="sIcon" column="s_icon"/>
		<result property="linkUrl" column="link_url"/>
		<result property="buys" column="buys"/>
		<result property="delFlag" column="del_flag"/>
		<result property="createtime" column="createtime"/>
		<result property="modifytime" column="modifytime"/>
	</resultMap>
	<sql id="public_summary_column">
	    t_goods.id,
		t_goods.goods_code,
		t_goods.goods_name,
		t_goods.sell_price,
		t_goods.like_num,
		t_goods.is_top,
		t_goods.is_hot,
		t_goods.index_hot,
		t_goods.preview,
		t_goods.keyword,
		t_goods.stocks,
		t_goods.l_icon,
		t_goods.link_url,
		t_goods.buys
	</sql>
	<sql id="public_column">
	    t_goods.id,
		t_goods.goods_code,
		t_goods.goods_name,
		t_goods.display_name,
		t_goods.shop_id,
		t_goods.brand_id,
		t_goods.creater_uid,
		t_goods.sell_price,
		t_goods.cost_price,
		t_goods.comm_rate,
		t_goods.comm_price,
		t_goods.goods_pic,
		t_goods.brief,
		t_goods.content,
		t_goods.like_num,
		t_goods.is_top,
		t_goods.is_hot,
		t_goods.index_hot,
		t_goods.status,
		t_goods.preview,
		t_goods.sort,
		t_goods.keyword,
		t_goods.stocks,
		t_goods.l_icon,
		t_goods.s_icon,
		t_goods.link_url,
		t_goods.buys,
		t_goods.del_flag,
		t_goods.createtime,
		t_goods.modifytime
	</sql>
	<sql id="public_value">
	    null,
		#{goodsCode},
		#{goodsName},
		#{displayName},
		#{shopId},
		#{brandId},
		#{createrUid},
		#{sellPrice},
		#{costPrice},
		#{commRate},
		#{commPrice},
		#{goodsPic},
		#{brief},
		#{content},
		#{likeNum},
		#{isTop},
		#{isHot},
		#{indexHot},
		0,
		#{preview},
		#{sort},
		#{keyword},
		#{stocks},
		#{lIcon},
		#{sIcon},
		#{linkUrl},
		0,
		0,
		now(),
		now()
	</sql>
	
	<insert id="add" parameterType="com.stomato.domain.Goods">
		insert into t_goods (<include refid="public_column"/>) 
		values (<include refid="public_value"/> )
		 <selectKey  keyProperty="id" resultType="int"> 
		    SELECT @@IDENTITY as id
		 </selectKey>
	</insert>
	<insert id="addBatch" parameterType="java.util.List">
		insert into t_goods (<include refid="public_column"/>) 
		values
		<foreach collection="list" item="bean" index="index" separator="," >  
		        (null,
				#{bean.goodsCode},
				#{bean.goodsName},
				#{bean.displayName},
				#{bean.shopId},
				#{bean.brandId},
				#{bean.createrUid},
				#{bean.sellPrice},
				#{bean.costPrice},
				#{bean.commRate},
				#{bean.commPrice},
				#{bean.goodsPic},
				#{bean.brief},
				#{bean.content},
				#{bean.likeNum},
				#{bean.isTop},
				#{bean.isHot},
				#{bean.indexHot},
				0,
				#{bean.preview},
				#{bean.sort},
				#{bean.keyword},
				#{bean.stocks},
				#{bean.lIcon},
				#{bean.sIcon},
				#{bean.linkUrl},
				0,
				0,
				now(),
				now())
		</foreach>
	</insert>
	<select id="get" parameterType="int" resultMap="goods" >
		select <include refid="public_column"/>
				from t_goods where id=#{id} and del_flag = 0
	</select>
	<update id="update" parameterType="com.stomato.domain.Goods">
		update t_goods
		<set>
			<if test="goodsCode != null">goods_code=#{goodsCode},</if>
			<if test="goodsName != null">goods_name=#{goodsName},</if>
			<if test="displayName != null">display_name=#{displayName},</if>
			<if test="shopId != null">shop_id=#{shopId},</if>
			<if test="brandId != null">brand_id=#{brandId},</if>
			<if test="createrUid != null">creater_uid=#{createrUid},</if>
			<if test="costPrice != null">cost_price=#{costPrice},</if>
			<if test="sellPrice != null">sell_price=#{sellPrice},</if>
			<if test="commRate != null">comm_rate=#{commRate},</if>
			<if test="commPrice != null">comm_price=#{commPrice},</if>
			<if test="goodsPic != null">goods_pic=#{goodsPic},</if>
			<if test="brief != null">brief=#{brief},</if>
			<if test="content != null">content=#{content},</if>
			<if test="likeNum != null">like_num=#{likeNum},</if>
			<if test="isTop != null">isTop=#{isTop},</if>
			<if test="isHot != null">isHot=#{isHot},</if>
			<if test="indexHot != null">indexHot=#{indexHot},</if>
			<if test="status != null">status=#{status},</if>
			<if test="preview != null">preview=#{preview},</if>
			<if test="sort != null">sort=#{sort},</if>
			<if test="keyword != null">keyword=#{keyword},</if>
			<if test="stocks != null">stocks=#{stocks},</if>
			<if test="lIcon != null">l_icon=#{lIcon},</if>
			<if test="sIcon != null">s_icon=#{sIcon},</if>
			<if test="linkUrl != null">link_url=#{linkUrl},</if>
			<if test="buys != null">buys=#{buys},</if>
			<if test="delFlag != null">del_flag=#{delFlag},</if>
			modifytime=now()
		</set>
        where id = #{id} 
	</update>
	<delete id="delete" parameterType="int">
		delete from t_goods where id = #{id}
	</delete>
	
	<select id="listTotal" parameterType="com.stomato.form.GoodsFormParam" resultType="int" >
		select count(1) from t_goods where 1=1 and del_flag = 0
		<if test="goodsName != null">
		 	and goods_name like '%${goodsName}%'
		</if>
	</select>
	<select id="list" parameterType="com.stomato.form.GoodsFormParam" resultMap="goods" >
		select  <include refid="public_column"/>
				from t_goods where del_flag = 0
		<if test="goodsName != null">
		 	and goods_name like '%${goodsName}%'
		</if>
		order by sort asc
		<if test="offset != null">limit #{offset},#{pageSize}</if>
	</select>

	<select id="querySummaryCount" parameterType="com.stomato.form.GoodsFormParam" resultType="java.lang.Integer" >
		select count(1) from (
				select t_goods.id
				from t_goods LEFT JOIN t_goods_cate gc on t_goods.id = gc.goods_id
							 LEFT JOIN t_shop s on t_goods.shop_id = s.id
				where t_goods.del_flag = 0
				<if test="categorys != null ">and gc.cate_id in
			        <foreach item="item" index="index" collection="categorys" open="(" separator="," close=")">
			            #{item}
			        </foreach>
				</if>
				<if test="keyword != null ">and t_goods.keyword like '%${keyword}%' </if>
				<if test="pricefrom != null ">and t_goods.sell_price >= #{pricefrom} </if>
				<if test="priceto != null "><![CDATA[ and t_goods.sell_price <= #{priceto} ]]></if>
				group by t_goods.id
			) temp
	</select>
	<select id="querySummaryList" parameterType="com.stomato.form.GoodsFormParam" resultType="Map" >
		select <include refid="public_summary_column"/>,
		    s.shop_name,
		    s.shop_url,
		    group_concat(gc.cate_id) categorys
		from t_goods 
			LEFT JOIN t_goods_cate gc on t_goods.id = gc.goods_id
			LEFT JOIN t_shop s on t_goods.shop_id = s.id
	    WHERE
			t_goods.del_flag = 0
			<if test="categorys != null ">and gc.cate_id in
		        <foreach item="item" index="index" collection="categorys" open="(" separator="," close=")">
		            #{item}
		        </foreach>
			</if>
			<if test="keyword != null ">and t_goods.keyword like '%${keyword}%' </if>
			<if test="pricefrom != null ">and t_goods.sell_price >= #{pricefrom} </if>
			<if test="priceto != null "><![CDATA[ and t_goods.sell_price <= #{priceto} ]]></if>
		group by t_goods.id
		order by t_goods.sort asc
		<if test="offset != null">limit #{offset},#{pageSize}</if>
	</select>
</mapper>